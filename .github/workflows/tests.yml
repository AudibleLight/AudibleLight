name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  REMOTE: true
  PYTHONMALLOC: debug
  MALLOC_CHECK_: "3"
  MALLOC_PERTURB_: ${{ github.run_id }}
  OMP_NUM_THREADS: "1"
  MKL_NUM_THREADS: "1"
  OPENBLAS_NUM_THREADS: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Add Poetry to PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install libsox-dev libsox-fmt-all freeglut3-dev

      - name: Install Python dependencies with Poetry
        run: |
          poetry install --no-interaction --no-root

      - name: Style check with flake8
        shell: bash -l {0}
        run: poetry run flake8 audiblelight --count --select=E9,F63,F7,F82 --show-source --statistics

        # This should hopefully help until we can fix https://github.com/AudibleLight/AudibleLight/issues/28
#      - name: Run tests with retrying
#        uses: nick-fields/retry@v3
#        with:
#          timeout_minutes: 20
#          max_attempts: 5
#          command: poetry run pytest -vv --cov-branch --cov-report term-missing --cov-report=xml --cov=audiblelight tests
#          retry_wait_seconds: 30
#          continue_on_error: false
      - name: Run tests without retrying
        run: | 
          poetry run pytest -vv --cov-branch --cov-report term-missing --cov-report=xml --cov=audiblelight tests

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
