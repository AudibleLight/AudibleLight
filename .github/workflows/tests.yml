name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  REMOTE: true

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2

      - name: Configure Poetry to create virtualenvs inside project
        run: poetry config virtualenvs.in-project true

      - name: Add Poetry to PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install libsox-dev libsox-fmt-all freeglut3-dev

      - name: Install Python dependencies with Poetry
        run: |
          poetry install --no-interaction --no-root

      - name: Style check with flake8
        shell: bash -l {0}
        run: poetry run flake8 audiblelight --count --select=E9,F63,F7,F82 --show-source --statistics
        # Info about error codes: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
        # and https://flake8.pycqa.org/en/latest/user/error-codes.html

#      - name: Run tests
#        # This should hopefully help until we can fix https://github.com/AudibleLight/AudibleLight/issues/28
#        uses: nick-fields/retry@v3.0.2
#        with:
#          timeout_minutes: 20
#          max_attempts: 5
#          command: poetry run pytest -vv --cov-branch --cov-report term-missing --cov-report=xml --cov=audiblelight tests
#          retry_wait_seconds: 30
#          continue_on_error: false

      - name: Run tests
        run: poetry run pytest -vv --cov-report term-missing --cov-report=xml --cov=audiblelight tests

      - name: Upload coverage to Codecov
        # only upload to codecov with latest python version
        if: success() && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}